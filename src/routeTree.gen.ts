/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as MainRouteRouteImport } from './routes/_main/route'
import { Route as MainIndexRouteImport } from './routes/_main/index'
import { Route as authLoginIndexRouteImport } from './routes/(auth)/login/index'

const MainDataManageIndexLazyRouteImport =
  createFileRoute('/_main/dataManage/')()
const MainDashboardIndexLazyRouteImport = createFileRoute('/_main/dashboard/')()
const MainUnionMembersLazyRouteImport = createFileRoute(
  '/_main/union/members',
)()
const MainUnionLogLazyRouteImport = createFileRoute('/_main/union/log')()
const MainUnionAccountLazyRouteImport = createFileRoute(
  '/_main/union/account',
)()
const MainSignRemoveLazyRouteImport = createFileRoute('/_main/sign/remove')()
const MainSignPunishLazyRouteImport = createFileRoute('/_main/sign/punish')()
const MainSignMembersLazyRouteImport = createFileRoute('/_main/sign/members')()
const MainSignApplyLazyRouteImport = createFileRoute('/_main/sign/apply')()
const MainRoomLicenseLazyRouteImport = createFileRoute('/_main/room/license')()
const MainChatRoomStaticsIndexLazyRouteImport = createFileRoute(
  '/_main/chatRoom/statics/',
)()
const MainChatRoomRoomInfoIndexLazyRouteImport = createFileRoute(
  '/_main/chatRoom/roomInfo/',
)()
const MainChatRoomRoomInfoDetailIndexLazyRouteImport = createFileRoute(
  '/_main/chatRoom/roomInfo/detail/',
)()

const MainRouteRoute = MainRouteRouteImport.update({
  id: '/_main',
  getParentRoute: () => rootRouteImport,
} as any)
const MainIndexRoute = MainIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => MainRouteRoute,
} as any)
const MainDataManageIndexLazyRoute = MainDataManageIndexLazyRouteImport.update({
  id: '/dataManage/',
  path: '/dataManage/',
  getParentRoute: () => MainRouteRoute,
} as any).lazy(() =>
  import('./routes/_main/dataManage/index.lazy').then((d) => d.Route),
)
const MainDashboardIndexLazyRoute = MainDashboardIndexLazyRouteImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => MainRouteRoute,
} as any).lazy(() =>
  import('./routes/_main/dashboard/index.lazy').then((d) => d.Route),
)
const authLoginIndexRoute = authLoginIndexRouteImport.update({
  id: '/(auth)/login/',
  path: '/login/',
  getParentRoute: () => rootRouteImport,
} as any)
const MainUnionMembersLazyRoute = MainUnionMembersLazyRouteImport.update({
  id: '/union/members',
  path: '/union/members',
  getParentRoute: () => MainRouteRoute,
} as any).lazy(() =>
  import('./routes/_main/union/members.lazy').then((d) => d.Route),
)
const MainUnionLogLazyRoute = MainUnionLogLazyRouteImport.update({
  id: '/union/log',
  path: '/union/log',
  getParentRoute: () => MainRouteRoute,
} as any).lazy(() =>
  import('./routes/_main/union/log.lazy').then((d) => d.Route),
)
const MainUnionAccountLazyRoute = MainUnionAccountLazyRouteImport.update({
  id: '/union/account',
  path: '/union/account',
  getParentRoute: () => MainRouteRoute,
} as any).lazy(() =>
  import('./routes/_main/union/account.lazy').then((d) => d.Route),
)
const MainSignRemoveLazyRoute = MainSignRemoveLazyRouteImport.update({
  id: '/sign/remove',
  path: '/sign/remove',
  getParentRoute: () => MainRouteRoute,
} as any).lazy(() =>
  import('./routes/_main/sign/remove.lazy').then((d) => d.Route),
)
const MainSignPunishLazyRoute = MainSignPunishLazyRouteImport.update({
  id: '/sign/punish',
  path: '/sign/punish',
  getParentRoute: () => MainRouteRoute,
} as any).lazy(() =>
  import('./routes/_main/sign/punish.lazy').then((d) => d.Route),
)
const MainSignMembersLazyRoute = MainSignMembersLazyRouteImport.update({
  id: '/sign/members',
  path: '/sign/members',
  getParentRoute: () => MainRouteRoute,
} as any).lazy(() =>
  import('./routes/_main/sign/members.lazy').then((d) => d.Route),
)
const MainSignApplyLazyRoute = MainSignApplyLazyRouteImport.update({
  id: '/sign/apply',
  path: '/sign/apply',
  getParentRoute: () => MainRouteRoute,
} as any).lazy(() =>
  import('./routes/_main/sign/apply.lazy').then((d) => d.Route),
)
const MainRoomLicenseLazyRoute = MainRoomLicenseLazyRouteImport.update({
  id: '/room/license',
  path: '/room/license',
  getParentRoute: () => MainRouteRoute,
} as any).lazy(() =>
  import('./routes/_main/room/license.lazy').then((d) => d.Route),
)
const MainChatRoomStaticsIndexLazyRoute =
  MainChatRoomStaticsIndexLazyRouteImport.update({
    id: '/chatRoom/statics/',
    path: '/chatRoom/statics/',
    getParentRoute: () => MainRouteRoute,
  } as any).lazy(() =>
    import('./routes/_main/chatRoom/statics/index.lazy').then((d) => d.Route),
  )
const MainChatRoomRoomInfoIndexLazyRoute =
  MainChatRoomRoomInfoIndexLazyRouteImport.update({
    id: '/chatRoom/roomInfo/',
    path: '/chatRoom/roomInfo/',
    getParentRoute: () => MainRouteRoute,
  } as any).lazy(() =>
    import('./routes/_main/chatRoom/roomInfo/index.lazy').then((d) => d.Route),
  )
const MainChatRoomRoomInfoDetailIndexLazyRoute =
  MainChatRoomRoomInfoDetailIndexLazyRouteImport.update({
    id: '/chatRoom/roomInfo/detail/',
    path: '/chatRoom/roomInfo/detail/',
    getParentRoute: () => MainRouteRoute,
  } as any).lazy(() =>
    import('./routes/_main/chatRoom/roomInfo/detail/index.lazy').then(
      (d) => d.Route,
    ),
  )

export interface FileRoutesByFullPath {
  '/': typeof MainIndexRoute
  '/room/license': typeof MainRoomLicenseLazyRoute
  '/sign/apply': typeof MainSignApplyLazyRoute
  '/sign/members': typeof MainSignMembersLazyRoute
  '/sign/punish': typeof MainSignPunishLazyRoute
  '/sign/remove': typeof MainSignRemoveLazyRoute
  '/union/account': typeof MainUnionAccountLazyRoute
  '/union/log': typeof MainUnionLogLazyRoute
  '/union/members': typeof MainUnionMembersLazyRoute
  '/login': typeof authLoginIndexRoute
  '/dashboard': typeof MainDashboardIndexLazyRoute
  '/dataManage': typeof MainDataManageIndexLazyRoute
  '/chatRoom/roomInfo': typeof MainChatRoomRoomInfoIndexLazyRoute
  '/chatRoom/statics': typeof MainChatRoomStaticsIndexLazyRoute
  '/chatRoom/roomInfo/detail': typeof MainChatRoomRoomInfoDetailIndexLazyRoute
}
export interface FileRoutesByTo {
  '/': typeof MainIndexRoute
  '/room/license': typeof MainRoomLicenseLazyRoute
  '/sign/apply': typeof MainSignApplyLazyRoute
  '/sign/members': typeof MainSignMembersLazyRoute
  '/sign/punish': typeof MainSignPunishLazyRoute
  '/sign/remove': typeof MainSignRemoveLazyRoute
  '/union/account': typeof MainUnionAccountLazyRoute
  '/union/log': typeof MainUnionLogLazyRoute
  '/union/members': typeof MainUnionMembersLazyRoute
  '/login': typeof authLoginIndexRoute
  '/dashboard': typeof MainDashboardIndexLazyRoute
  '/dataManage': typeof MainDataManageIndexLazyRoute
  '/chatRoom/roomInfo': typeof MainChatRoomRoomInfoIndexLazyRoute
  '/chatRoom/statics': typeof MainChatRoomStaticsIndexLazyRoute
  '/chatRoom/roomInfo/detail': typeof MainChatRoomRoomInfoDetailIndexLazyRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_main': typeof MainRouteRouteWithChildren
  '/_main/': typeof MainIndexRoute
  '/_main/room/license': typeof MainRoomLicenseLazyRoute
  '/_main/sign/apply': typeof MainSignApplyLazyRoute
  '/_main/sign/members': typeof MainSignMembersLazyRoute
  '/_main/sign/punish': typeof MainSignPunishLazyRoute
  '/_main/sign/remove': typeof MainSignRemoveLazyRoute
  '/_main/union/account': typeof MainUnionAccountLazyRoute
  '/_main/union/log': typeof MainUnionLogLazyRoute
  '/_main/union/members': typeof MainUnionMembersLazyRoute
  '/(auth)/login/': typeof authLoginIndexRoute
  '/_main/dashboard/': typeof MainDashboardIndexLazyRoute
  '/_main/dataManage/': typeof MainDataManageIndexLazyRoute
  '/_main/chatRoom/roomInfo/': typeof MainChatRoomRoomInfoIndexLazyRoute
  '/_main/chatRoom/statics/': typeof MainChatRoomStaticsIndexLazyRoute
  '/_main/chatRoom/roomInfo/detail/': typeof MainChatRoomRoomInfoDetailIndexLazyRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/room/license'
    | '/sign/apply'
    | '/sign/members'
    | '/sign/punish'
    | '/sign/remove'
    | '/union/account'
    | '/union/log'
    | '/union/members'
    | '/login'
    | '/dashboard'
    | '/dataManage'
    | '/chatRoom/roomInfo'
    | '/chatRoom/statics'
    | '/chatRoom/roomInfo/detail'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/room/license'
    | '/sign/apply'
    | '/sign/members'
    | '/sign/punish'
    | '/sign/remove'
    | '/union/account'
    | '/union/log'
    | '/union/members'
    | '/login'
    | '/dashboard'
    | '/dataManage'
    | '/chatRoom/roomInfo'
    | '/chatRoom/statics'
    | '/chatRoom/roomInfo/detail'
  id:
    | '__root__'
    | '/_main'
    | '/_main/'
    | '/_main/room/license'
    | '/_main/sign/apply'
    | '/_main/sign/members'
    | '/_main/sign/punish'
    | '/_main/sign/remove'
    | '/_main/union/account'
    | '/_main/union/log'
    | '/_main/union/members'
    | '/(auth)/login/'
    | '/_main/dashboard/'
    | '/_main/dataManage/'
    | '/_main/chatRoom/roomInfo/'
    | '/_main/chatRoom/statics/'
    | '/_main/chatRoom/roomInfo/detail/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  MainRouteRoute: typeof MainRouteRouteWithChildren
  authLoginIndexRoute: typeof authLoginIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_main': {
      id: '/_main'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof MainRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_main/': {
      id: '/_main/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof MainIndexRouteImport
      parentRoute: typeof MainRouteRoute
    }
    '/_main/dataManage/': {
      id: '/_main/dataManage/'
      path: '/dataManage'
      fullPath: '/dataManage'
      preLoaderRoute: typeof MainDataManageIndexLazyRouteImport
      parentRoute: typeof MainRouteRoute
    }
    '/_main/dashboard/': {
      id: '/_main/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof MainDashboardIndexLazyRouteImport
      parentRoute: typeof MainRouteRoute
    }
    '/(auth)/login/': {
      id: '/(auth)/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_main/union/members': {
      id: '/_main/union/members'
      path: '/union/members'
      fullPath: '/union/members'
      preLoaderRoute: typeof MainUnionMembersLazyRouteImport
      parentRoute: typeof MainRouteRoute
    }
    '/_main/union/log': {
      id: '/_main/union/log'
      path: '/union/log'
      fullPath: '/union/log'
      preLoaderRoute: typeof MainUnionLogLazyRouteImport
      parentRoute: typeof MainRouteRoute
    }
    '/_main/union/account': {
      id: '/_main/union/account'
      path: '/union/account'
      fullPath: '/union/account'
      preLoaderRoute: typeof MainUnionAccountLazyRouteImport
      parentRoute: typeof MainRouteRoute
    }
    '/_main/sign/remove': {
      id: '/_main/sign/remove'
      path: '/sign/remove'
      fullPath: '/sign/remove'
      preLoaderRoute: typeof MainSignRemoveLazyRouteImport
      parentRoute: typeof MainRouteRoute
    }
    '/_main/sign/punish': {
      id: '/_main/sign/punish'
      path: '/sign/punish'
      fullPath: '/sign/punish'
      preLoaderRoute: typeof MainSignPunishLazyRouteImport
      parentRoute: typeof MainRouteRoute
    }
    '/_main/sign/members': {
      id: '/_main/sign/members'
      path: '/sign/members'
      fullPath: '/sign/members'
      preLoaderRoute: typeof MainSignMembersLazyRouteImport
      parentRoute: typeof MainRouteRoute
    }
    '/_main/sign/apply': {
      id: '/_main/sign/apply'
      path: '/sign/apply'
      fullPath: '/sign/apply'
      preLoaderRoute: typeof MainSignApplyLazyRouteImport
      parentRoute: typeof MainRouteRoute
    }
    '/_main/room/license': {
      id: '/_main/room/license'
      path: '/room/license'
      fullPath: '/room/license'
      preLoaderRoute: typeof MainRoomLicenseLazyRouteImport
      parentRoute: typeof MainRouteRoute
    }
    '/_main/chatRoom/statics/': {
      id: '/_main/chatRoom/statics/'
      path: '/chatRoom/statics'
      fullPath: '/chatRoom/statics'
      preLoaderRoute: typeof MainChatRoomStaticsIndexLazyRouteImport
      parentRoute: typeof MainRouteRoute
    }
    '/_main/chatRoom/roomInfo/': {
      id: '/_main/chatRoom/roomInfo/'
      path: '/chatRoom/roomInfo'
      fullPath: '/chatRoom/roomInfo'
      preLoaderRoute: typeof MainChatRoomRoomInfoIndexLazyRouteImport
      parentRoute: typeof MainRouteRoute
    }
    '/_main/chatRoom/roomInfo/detail/': {
      id: '/_main/chatRoom/roomInfo/detail/'
      path: '/chatRoom/roomInfo/detail'
      fullPath: '/chatRoom/roomInfo/detail'
      preLoaderRoute: typeof MainChatRoomRoomInfoDetailIndexLazyRouteImport
      parentRoute: typeof MainRouteRoute
    }
  }
}

interface MainRouteRouteChildren {
  MainIndexRoute: typeof MainIndexRoute
  MainRoomLicenseLazyRoute: typeof MainRoomLicenseLazyRoute
  MainSignApplyLazyRoute: typeof MainSignApplyLazyRoute
  MainSignMembersLazyRoute: typeof MainSignMembersLazyRoute
  MainSignPunishLazyRoute: typeof MainSignPunishLazyRoute
  MainSignRemoveLazyRoute: typeof MainSignRemoveLazyRoute
  MainUnionAccountLazyRoute: typeof MainUnionAccountLazyRoute
  MainUnionLogLazyRoute: typeof MainUnionLogLazyRoute
  MainUnionMembersLazyRoute: typeof MainUnionMembersLazyRoute
  MainDashboardIndexLazyRoute: typeof MainDashboardIndexLazyRoute
  MainDataManageIndexLazyRoute: typeof MainDataManageIndexLazyRoute
  MainChatRoomRoomInfoIndexLazyRoute: typeof MainChatRoomRoomInfoIndexLazyRoute
  MainChatRoomStaticsIndexLazyRoute: typeof MainChatRoomStaticsIndexLazyRoute
  MainChatRoomRoomInfoDetailIndexLazyRoute: typeof MainChatRoomRoomInfoDetailIndexLazyRoute
}

const MainRouteRouteChildren: MainRouteRouteChildren = {
  MainIndexRoute: MainIndexRoute,
  MainRoomLicenseLazyRoute: MainRoomLicenseLazyRoute,
  MainSignApplyLazyRoute: MainSignApplyLazyRoute,
  MainSignMembersLazyRoute: MainSignMembersLazyRoute,
  MainSignPunishLazyRoute: MainSignPunishLazyRoute,
  MainSignRemoveLazyRoute: MainSignRemoveLazyRoute,
  MainUnionAccountLazyRoute: MainUnionAccountLazyRoute,
  MainUnionLogLazyRoute: MainUnionLogLazyRoute,
  MainUnionMembersLazyRoute: MainUnionMembersLazyRoute,
  MainDashboardIndexLazyRoute: MainDashboardIndexLazyRoute,
  MainDataManageIndexLazyRoute: MainDataManageIndexLazyRoute,
  MainChatRoomRoomInfoIndexLazyRoute: MainChatRoomRoomInfoIndexLazyRoute,
  MainChatRoomStaticsIndexLazyRoute: MainChatRoomStaticsIndexLazyRoute,
  MainChatRoomRoomInfoDetailIndexLazyRoute:
    MainChatRoomRoomInfoDetailIndexLazyRoute,
}

const MainRouteRouteWithChildren = MainRouteRoute._addFileChildren(
  MainRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  MainRouteRoute: MainRouteRouteWithChildren,
  authLoginIndexRoute: authLoginIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
